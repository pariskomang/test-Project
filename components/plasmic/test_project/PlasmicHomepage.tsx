// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: fTTmbaAYBMLxPmhrTsw96
// Component: zq9IMgT5XXfD
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_test_project.module.css"; // plasmic-import: fTTmbaAYBMLxPmhrTsw96/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: zq9IMgT5XXfD/css

import Ellipse18Icon from "./icons/PlasmicIcon__Ellipse18"; // plasmic-import: sw5v_ogexP/icon
import Ellipse24Icon from "./icons/PlasmicIcon__Ellipse24"; // plasmic-import: iKIujpuGn-/icon
import Ellipse31Icon from "./icons/PlasmicIcon__Ellipse31"; // plasmic-import: K1Ul3Mdy7-/icon
import Ellipse32Icon from "./icons/PlasmicIcon__Ellipse32"; // plasmic-import: GEVp6TFkJP/icon
import Ellipse19Icon from "./icons/PlasmicIcon__Ellipse19"; // plasmic-import: YmM_DwQTIM/icon
import Ellipse25Icon from "./icons/PlasmicIcon__Ellipse25"; // plasmic-import: 8n8-K1BzIA/icon
import Ellipse33Icon from "./icons/PlasmicIcon__Ellipse33"; // plasmic-import: 8gFC1V85Rh/icon
import Ellipse34Icon from "./icons/PlasmicIcon__Ellipse34"; // plasmic-import: bLTRTxnfmc/icon

export type PlasmicHomepage__VariantMembers = {};

export type PlasmicHomepage__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage__VariantsArgs;
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage__ArgsType = {};
type ArgPropType = keyof PlasmicHomepage__ArgsType;
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>();

export type PlasmicHomepage__OverridesType = {
  root?: p.Flex<"div">;
  overviewBgsI?: p.Flex<"div">;
  group53?: p.Flex<"div">;
  rectangle12?: p.Flex<"div">;
  frame23?: p.Flex<"div">;
  jlHrRasunaSaidBlokX5Kav49?: p.Flex<"div">;
  jakartaSelatanJakartaIndonesia12950?: p.Flex<"div">;
  telp021529074169?: p.Flex<"div">;
  haloKemenkesKodeLokal1500567?: p.Flex<"div">;
  frame24?: p.Flex<"div">;
  frame25?: p.Flex<"div">;
  privacyPolicy?: p.Flex<"div">;
  frame26?: p.Flex<"div">;
  theFutureOfHealthInIndonesia?: p.Flex<"div">;
  frame30?: p.Flex<"div">;
  group1?: p.Flex<"div">;
  rectangle10?: p.Flex<"div">;
  rectangle9?: p.Flex<"div">;
  rectangle11?: p.Flex<"div">;
  group2?: p.Flex<"div">;
  rectangle13?: p.Flex<"div">;
  rectangle14?: p.Flex<"div">;
  rectangle15?: p.Flex<"div">;
  navbar?: p.Flex<"div">;
  frame1?: p.Flex<"div">;
  frame42?: p.Flex<"div">;
  date?: p.Flex<"div">;
  rectangle5?: p.Flex<"div">;
};

export interface DefaultHomepageProps {}

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs;
  args: PlasmicHomepage__ArgsType;
  overrides: PlasmicHomepage__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(
    () =>
      Object.assign(
        {},

        props.args
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            sty.root
          )}
        >
          <div
            data-plasmic-name={"overviewBgsI"}
            data-plasmic-override={overrides.overviewBgsI}
            className={classNames(projectcss.all, sty.overviewBgsI)}
          >
            <div
              data-plasmic-name={"group53"}
              data-plasmic-override={overrides.group53}
              className={classNames(projectcss.all, sty.group53)}
            >
              <div
                data-plasmic-name={"rectangle12"}
                data-plasmic-override={overrides.rectangle12}
                className={classNames(projectcss.all, sty.rectangle12)}
              />

              <p.Stack
                as={"div"}
                data-plasmic-name={"frame23"}
                data-plasmic-override={overrides.frame23}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame23)}
              >
                <div
                  data-plasmic-name={"jlHrRasunaSaidBlokX5Kav49"}
                  data-plasmic-override={overrides.jlHrRasunaSaidBlokX5Kav49}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.jlHrRasunaSaidBlokX5Kav49
                  )}
                >
                  {"Jl. HR. Rasuna Said Blok X5 Kav. 4-9\r"}
                </div>

                <div
                  data-plasmic-name={"jakartaSelatanJakartaIndonesia12950"}
                  data-plasmic-override={
                    overrides.jakartaSelatanJakartaIndonesia12950
                  }
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.jakartaSelatanJakartaIndonesia12950
                  )}
                >
                  {"Jakarta Selatan, Jakarta, Indonesia 12950\r"}
                </div>

                <div
                  data-plasmic-name={"telp021529074169"}
                  data-plasmic-override={overrides.telp021529074169}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.telp021529074169
                  )}
                >
                  {"Telp. (021) 52907416-9\r"}
                </div>

                <div
                  data-plasmic-name={"haloKemenkesKodeLokal1500567"}
                  data-plasmic-override={overrides.haloKemenkesKodeLokal1500567}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.haloKemenkesKodeLokal1500567
                  )}
                >
                  {"Halo Kemenkes (kode lokal) 1-500567\r"}
                </div>
              </p.Stack>

              <p.Stack
                as={"div"}
                data-plasmic-name={"frame24"}
                data-plasmic-override={overrides.frame24}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame24)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__yftct
                  )}
                >
                  {"Home"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__tiRj0
                  )}
                >
                  {"About"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__y1Xsw
                  )}
                >
                  {"Product"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__n8Uyx
                  )}
                >
                  {"Join Us"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__vWjKc
                  )}
                >
                  {"Contact"}
                </div>
              </p.Stack>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__pZzI
                )}
              >
                {"Â© 2021 DTO Kemkes"}
              </div>

              <p.Stack
                as={"div"}
                data-plasmic-name={"frame25"}
                data-plasmic-override={overrides.frame25}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame25)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__ep4Ve
                  )}
                >
                  {"Sitemap"}
                </div>

                <div
                  data-plasmic-name={"privacyPolicy"}
                  data-plasmic-override={overrides.privacyPolicy}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.privacyPolicy
                  )}
                >
                  {"Privacy policy "}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__oUnjK
                  )}
                >
                  {"Terms of use"}
                </div>
              </p.Stack>

              <p.Stack
                as={"div"}
                data-plasmic-name={"frame26"}
                data-plasmic-override={overrides.frame26}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame26)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__bJnlf)}
                  displayHeight={"41.275px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"127.003px" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/test_project/images/group55.svg",
                    fullWidth: 127.003,
                    fullHeight: 41.275,
                    aspectRatio: 3.047619
                  }}
                />

                <div
                  data-plasmic-name={"theFutureOfHealthInIndonesia"}
                  data-plasmic-override={overrides.theFutureOfHealthInIndonesia}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.theFutureOfHealthInIndonesia
                  )}
                >
                  {"The Future of Health in Indonesia \r"}
                </div>
              </p.Stack>
            </div>

            <div
              data-plasmic-name={"frame30"}
              data-plasmic-override={overrides.frame30}
              className={classNames(projectcss.all, sty.frame30)}
            >
              <div
                data-plasmic-name={"group1"}
                data-plasmic-override={overrides.group1}
                className={classNames(projectcss.all, sty.group1)}
              >
                <Ellipse18Icon
                  className={classNames(projectcss.all, sty.svg__jrlv2)}
                  role={"img"}
                />

                <Ellipse18Icon
                  className={classNames(projectcss.all, sty.svg__gga2C)}
                  role={"img"}
                />

                <Ellipse18Icon
                  className={classNames(projectcss.all, sty.svg__pgx0O)}
                  role={"img"}
                />

                <Ellipse18Icon
                  className={classNames(projectcss.all, sty.svg__qcGV)}
                  role={"img"}
                />

                <Ellipse18Icon
                  className={classNames(projectcss.all, sty.svg__amcah)}
                  role={"img"}
                />

                <Ellipse18Icon
                  className={classNames(projectcss.all, sty.svg__fXEwI)}
                  role={"img"}
                />

                <Ellipse18Icon
                  className={classNames(projectcss.all, sty.svg__kSPyk)}
                  role={"img"}
                />

                <Ellipse18Icon
                  className={classNames(projectcss.all, sty.svg__yT2LA)}
                  role={"img"}
                />

                <Ellipse24Icon
                  className={classNames(projectcss.all, sty.svg__bTEsx)}
                  role={"img"}
                />

                <Ellipse24Icon
                  className={classNames(projectcss.all, sty.svg___5MhJ)}
                  role={"img"}
                />

                <div
                  data-plasmic-name={"rectangle10"}
                  data-plasmic-override={overrides.rectangle10}
                  className={classNames(projectcss.all, sty.rectangle10)}
                />

                <Ellipse31Icon
                  className={classNames(projectcss.all, sty.svg__uYfH)}
                  role={"img"}
                />

                <Ellipse32Icon
                  className={classNames(projectcss.all, sty.svg__r9RNd)}
                  role={"img"}
                />

                <div
                  data-plasmic-name={"rectangle9"}
                  data-plasmic-override={overrides.rectangle9}
                  className={classNames(projectcss.all, sty.rectangle9)}
                />

                <div
                  data-plasmic-name={"rectangle11"}
                  data-plasmic-override={overrides.rectangle11}
                  className={classNames(projectcss.all, sty.rectangle11)}
                />

                <Ellipse24Icon
                  className={classNames(projectcss.all, sty.svg__bcPXt)}
                  role={"img"}
                />

                <Ellipse24Icon
                  className={classNames(projectcss.all, sty.svg___2FXzD)}
                  role={"img"}
                />

                <Ellipse24Icon
                  className={classNames(projectcss.all, sty.svg__xsow)}
                  role={"img"}
                />

                <Ellipse24Icon
                  className={classNames(projectcss.all, sty.svg__r5Z8P)}
                  role={"img"}
                />

                <Ellipse31Icon
                  className={classNames(projectcss.all, sty.svg__kTpn)}
                  role={"img"}
                />
              </div>

              <div
                data-plasmic-name={"group2"}
                data-plasmic-override={overrides.group2}
                className={classNames(projectcss.all, sty.group2)}
              >
                <Ellipse19Icon
                  className={classNames(projectcss.all, sty.svg__eZArG)}
                  role={"img"}
                />

                <Ellipse19Icon
                  className={classNames(projectcss.all, sty.svg__p8Sha)}
                  role={"img"}
                />

                <Ellipse19Icon
                  className={classNames(projectcss.all, sty.svg__sikLr)}
                  role={"img"}
                />

                <Ellipse19Icon
                  className={classNames(projectcss.all, sty.svg___8XGjm)}
                  role={"img"}
                />

                <Ellipse19Icon
                  className={classNames(projectcss.all, sty.svg___805PK)}
                  role={"img"}
                />

                <Ellipse19Icon
                  className={classNames(projectcss.all, sty.svg__onxOo)}
                  role={"img"}
                />

                <Ellipse19Icon
                  className={classNames(projectcss.all, sty.svg__qOKh)}
                  role={"img"}
                />

                <Ellipse19Icon
                  className={classNames(projectcss.all, sty.svg___6NqsO)}
                  role={"img"}
                />

                <Ellipse25Icon
                  className={classNames(projectcss.all, sty.svg__pock9)}
                  role={"img"}
                />

                <Ellipse25Icon
                  className={classNames(projectcss.all, sty.svg__x89T)}
                  role={"img"}
                />

                <div
                  data-plasmic-name={"rectangle13"}
                  data-plasmic-override={overrides.rectangle13}
                  className={classNames(projectcss.all, sty.rectangle13)}
                />

                <Ellipse33Icon
                  className={classNames(projectcss.all, sty.svg__hhtG9)}
                  role={"img"}
                />

                <Ellipse34Icon
                  className={classNames(projectcss.all, sty.svg__rtqEs)}
                  role={"img"}
                />

                <div
                  data-plasmic-name={"rectangle14"}
                  data-plasmic-override={overrides.rectangle14}
                  className={classNames(projectcss.all, sty.rectangle14)}
                />

                <div
                  data-plasmic-name={"rectangle15"}
                  data-plasmic-override={overrides.rectangle15}
                  className={classNames(projectcss.all, sty.rectangle15)}
                />

                <Ellipse25Icon
                  className={classNames(projectcss.all, sty.svg__v97Ml)}
                  role={"img"}
                />

                <Ellipse25Icon
                  className={classNames(projectcss.all, sty.svg__sVZlQ)}
                  role={"img"}
                />

                <Ellipse25Icon
                  className={classNames(projectcss.all, sty.svg___0ZWw8)}
                  role={"img"}
                />

                <Ellipse25Icon
                  className={classNames(projectcss.all, sty.svg__nx7Pr)}
                  role={"img"}
                />

                <Ellipse33Icon
                  className={classNames(projectcss.all, sty.svg__b0Rf7)}
                  role={"img"}
                />
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__ht8Pj
                )}
              >
                {"Overview BGS-I"}
              </div>

              <div
                data-plasmic-name={"navbar"}
                data-plasmic-override={overrides.navbar}
                className={classNames(projectcss.all, sty.navbar)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame1"}
                  data-plasmic-override={overrides.frame1}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame1)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__hli7N
                    )}
                  >
                    {"Home"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__o7Kr4
                    )}
                  >
                    {"Release"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__oqrRn
                    )}
                  >
                    {"News"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__h0Ggr
                    )}
                  >
                    {"About"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__eP3Cm
                    )}
                  >
                    {"Contact"}
                  </div>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"frame42"}
                    data-plasmic-override={overrides.frame42}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame42)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___3BCy
                      )}
                    >
                      {"Register"}
                    </div>
                  </p.Stack>
                </p.Stack>

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__sOcSg)}
                  displayHeight={"44.726px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"160px" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/test_project/images/group7.svg",
                    fullWidth: 160,
                    fullHeight: 44.726,
                    aspectRatio: 3.555556
                  }}
                />
              </div>
            </div>

            <p.Stack
              as={"div"}
              data-plasmic-name={"date"}
              data-plasmic-override={overrides.date}
              hasGap={true}
              className={classNames(projectcss.all, sty.date)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___4BJnu
                )}
              >
                {
                  "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi feugiat ultrices interdum odio nunc vestibulum faucibus. Nulla rhoncus, lobortis tristique consectetur Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi feugiat ultrices interdum odio nunc vestibulum faucibus. Nulla rhoncus, lobortis tristique consectetur Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi feugiat ultrices interdum odio nunc vestibulum faucibus. Nulla rhoncus, lobortis tristique consectetur Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi feugiat ultrices interdum odio nunc vestibulum faucibus."
                }
              </div>
            </p.Stack>

            <div
              data-plasmic-name={"rectangle5"}
              data-plasmic-override={overrides.rectangle5}
              className={classNames(projectcss.all, sty.rectangle5)}
            />
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "overviewBgsI",
    "group53",
    "rectangle12",
    "frame23",
    "jlHrRasunaSaidBlokX5Kav49",
    "jakartaSelatanJakartaIndonesia12950",
    "telp021529074169",
    "haloKemenkesKodeLokal1500567",
    "frame24",
    "frame25",
    "privacyPolicy",
    "frame26",
    "theFutureOfHealthInIndonesia",
    "frame30",
    "group1",
    "rectangle10",
    "rectangle9",
    "rectangle11",
    "group2",
    "rectangle13",
    "rectangle14",
    "rectangle15",
    "navbar",
    "frame1",
    "frame42",
    "date",
    "rectangle5"
  ],
  overviewBgsI: [
    "overviewBgsI",
    "group53",
    "rectangle12",
    "frame23",
    "jlHrRasunaSaidBlokX5Kav49",
    "jakartaSelatanJakartaIndonesia12950",
    "telp021529074169",
    "haloKemenkesKodeLokal1500567",
    "frame24",
    "frame25",
    "privacyPolicy",
    "frame26",
    "theFutureOfHealthInIndonesia",
    "frame30",
    "group1",
    "rectangle10",
    "rectangle9",
    "rectangle11",
    "group2",
    "rectangle13",
    "rectangle14",
    "rectangle15",
    "navbar",
    "frame1",
    "frame42",
    "date",
    "rectangle5"
  ],
  group53: [
    "group53",
    "rectangle12",
    "frame23",
    "jlHrRasunaSaidBlokX5Kav49",
    "jakartaSelatanJakartaIndonesia12950",
    "telp021529074169",
    "haloKemenkesKodeLokal1500567",
    "frame24",
    "frame25",
    "privacyPolicy",
    "frame26",
    "theFutureOfHealthInIndonesia"
  ],
  rectangle12: ["rectangle12"],
  frame23: [
    "frame23",
    "jlHrRasunaSaidBlokX5Kav49",
    "jakartaSelatanJakartaIndonesia12950",
    "telp021529074169",
    "haloKemenkesKodeLokal1500567"
  ],
  jlHrRasunaSaidBlokX5Kav49: ["jlHrRasunaSaidBlokX5Kav49"],
  jakartaSelatanJakartaIndonesia12950: ["jakartaSelatanJakartaIndonesia12950"],
  telp021529074169: ["telp021529074169"],
  haloKemenkesKodeLokal1500567: ["haloKemenkesKodeLokal1500567"],
  frame24: ["frame24"],
  frame25: ["frame25", "privacyPolicy"],
  privacyPolicy: ["privacyPolicy"],
  frame26: ["frame26", "theFutureOfHealthInIndonesia"],
  theFutureOfHealthInIndonesia: ["theFutureOfHealthInIndonesia"],
  frame30: [
    "frame30",
    "group1",
    "rectangle10",
    "rectangle9",
    "rectangle11",
    "group2",
    "rectangle13",
    "rectangle14",
    "rectangle15",
    "navbar",
    "frame1",
    "frame42"
  ],
  group1: ["group1", "rectangle10", "rectangle9", "rectangle11"],
  rectangle10: ["rectangle10"],
  rectangle9: ["rectangle9"],
  rectangle11: ["rectangle11"],
  group2: ["group2", "rectangle13", "rectangle14", "rectangle15"],
  rectangle13: ["rectangle13"],
  rectangle14: ["rectangle14"],
  rectangle15: ["rectangle15"],
  navbar: ["navbar", "frame1", "frame42"],
  frame1: ["frame1", "frame42"],
  frame42: ["frame42"],
  date: ["date"],
  rectangle5: ["rectangle5"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  overviewBgsI: "div";
  group53: "div";
  rectangle12: "div";
  frame23: "div";
  jlHrRasunaSaidBlokX5Kav49: "div";
  jakartaSelatanJakartaIndonesia12950: "div";
  telp021529074169: "div";
  haloKemenkesKodeLokal1500567: "div";
  frame24: "div";
  frame25: "div";
  privacyPolicy: "div";
  frame26: "div";
  theFutureOfHealthInIndonesia: "div";
  frame30: "div";
  group1: "div";
  rectangle10: "div";
  rectangle9: "div";
  rectangle11: "div";
  group2: "div";
  rectangle13: "div";
  rectangle14: "div";
  rectangle15: "div";
  navbar: "div";
  frame1: "div";
  frame42: "div";
  date: "div";
  rectangle5: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage__VariantsArgs;
    args?: PlasmicHomepage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicHomepage__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    overviewBgsI: makeNodeComponent("overviewBgsI"),
    group53: makeNodeComponent("group53"),
    rectangle12: makeNodeComponent("rectangle12"),
    frame23: makeNodeComponent("frame23"),
    jlHrRasunaSaidBlokX5Kav49: makeNodeComponent("jlHrRasunaSaidBlokX5Kav49"),
    jakartaSelatanJakartaIndonesia12950: makeNodeComponent(
      "jakartaSelatanJakartaIndonesia12950"
    ),
    telp021529074169: makeNodeComponent("telp021529074169"),
    haloKemenkesKodeLokal1500567: makeNodeComponent(
      "haloKemenkesKodeLokal1500567"
    ),
    frame24: makeNodeComponent("frame24"),
    frame25: makeNodeComponent("frame25"),
    privacyPolicy: makeNodeComponent("privacyPolicy"),
    frame26: makeNodeComponent("frame26"),
    theFutureOfHealthInIndonesia: makeNodeComponent(
      "theFutureOfHealthInIndonesia"
    ),
    frame30: makeNodeComponent("frame30"),
    group1: makeNodeComponent("group1"),
    rectangle10: makeNodeComponent("rectangle10"),
    rectangle9: makeNodeComponent("rectangle9"),
    rectangle11: makeNodeComponent("rectangle11"),
    group2: makeNodeComponent("group2"),
    rectangle13: makeNodeComponent("rectangle13"),
    rectangle14: makeNodeComponent("rectangle14"),
    rectangle15: makeNodeComponent("rectangle15"),
    navbar: makeNodeComponent("navbar"),
    frame1: makeNodeComponent("frame1"),
    frame42: makeNodeComponent("frame42"),
    date: makeNodeComponent("date"),
    rectangle5: makeNodeComponent("rectangle5"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
